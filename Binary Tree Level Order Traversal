Question : 

Link: https://leetcode.com/problems/binary-tree-level-order-traversal/description/

Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

 
Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]
Example 2:

Input: root = [1]
Output: [[1]]
Example 3:

Input: root = []
Output: []

Answer:

class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>ans;
        if(root == NULL)return ans;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty())
        {
            int size = q.size();
            vector<int>answer;
            for(int i = 0 ; i<size ; i++)
            {
                TreeNode* front = q.front();
                q.pop();
                answer.push_back(front->val);
                if(front->left!=NULL)q.push(front->left);
                if(front->right!=NULL)q.push(front->right);
            }
            ans.push_back(answer);
        }
        return ans;
    }
};



Question:

Link:https://leetcode.com/problems/subsets/description/

Given an integer array nums of unique elements, return all possible 
subsets
 (the power set).

The solution set must not contain duplicate subsets. Return the solution in any order.

 

Example 1:

Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
Example 2:

Input: nums = [0]
Output: [[],[0]]

  Answer:

  class Solution {
public:
    void subset(vector<int>&nums,vector<vector<int>>&ans,int index,vector<int>answer)
    {
        if(index>=nums.size())
        {
            ans.push_back(answer);
            return;
        }
        answer.push_back(nums[index]);
        subset(nums,ans,index+1,answer);
        answer.pop_back();
        subset(nums,ans,index+1,answer);
    }
    vector<vector<int>> subsets(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>>ans;
        if(n==0)return ans;
        vector<int>answer;
        subset(nums,ans,0,answer);
        return ans;
    }
};

Question: 

Link: https://leetcode.com/problems/largest-rectangle-in-histogram/description/

Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.

 

Example 1:


Input: heights = [2,1,5,6,2,3]
Output: 10
Explanation: The above is a histogram where width of each bar is 1.
The largest rectangle is shown in the red area, which has an area = 10 units.
Example 2:


Input: heights = [2,4]
Output: 4


Answer:

class Solution {
public:
    vector<int>nextindex(vector<int>& heights)
    {
        vector<int>ans(heights.size());
        stack<int>st;
        st.push(-1);
        for(int i = heights.size()-1 ; i>=0 ; i--)
        {
            int n = heights[i];
            while(st.top()!=-1 && n<=heights[st.top()])
            {
                st.pop();
            }
            if(st.top()==-1)ans[i] = heights.size();
            else
            ans[i]=st.top();
            st.push(i);
        }
        return ans;
    }
    vector<int>previndex(vector<int>& heights)
    {
        vector<int>ans(heights.size());
        stack<int>st;
        st.push(-1);
        for(int i = 0 ; i<heights.size() ; i++)
        {
            int n = heights[i];
            while(st.top()!=-1 && n<=heights[st.top()])
            {
                st.pop();
            }
            ans[i] = st.top();
            st.push(i);
        }
        return ans;
    }
    int largestRectangleArea(vector<int>& heights) {
        vector<int>nindex = nextindex(heights);
        vector<int>pindex = previndex(heights);
        int area = INT_MIN ;
        for(int i = 0 ; i<heights.size() ; i++)
        {
            int narea = (nindex[i]-pindex[i]-1)*heights[i];
            area = max(area,narea);
        }
        return area;
    }
};
